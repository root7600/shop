<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yan.shop.dao.AppraisalItemMapper">
  <resultMap id="BaseResultMap" type="com.yan.shop.dao.AppraisalItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="itemId" jdbcType="BIGINT" property="itemId" />
    <result column="categoryId" jdbcType="BIGINT" property="categoryId" />
    <result column="evaluateLowPrice" jdbcType="BIGINT" property="evaluateLowPrice" />
    <result column="evaluateHighPrice" jdbcType="BIGINT" property="evaluateHighPrice" />
    <result column="appraisalFee" jdbcType="BIGINT" property="appraisalFee" />
    <result column="exceptSalePrice" jdbcType="BIGINT" property="exceptSalePrice" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="isAddMaterial" jdbcType="BIT" property="isAddMaterial" />
    <result column="reason" jdbcType="TINYINT" property="reason" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="itemType" jdbcType="TINYINT" property="itemType" />
    <result column="itemName" jdbcType="VARCHAR" property="itemName" />
    <result column="scarcity" jdbcType="TINYINT" property="scarcity" />
    <result column="appraisalLevel" jdbcType="TINYINT" property="appraisalLevel" />
    <result column="staffReviewStatus" jdbcType="TINYINT" property="staffReviewStatus" />
    <result column="dispatchPriority" jdbcType="TINYINT" property="dispatchPriority" />
    <result column="isHighQuality" jdbcType="BIT" property="isHighQuality" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="payTime" jdbcType="TIMESTAMP" property="payTime" />
    <result column="appraisalTime" jdbcType="TIMESTAMP" property="appraisalTime" />
    <result column="result" jdbcType="TINYINT" property="result" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="isDeleted" jdbcType="BIT" property="isDeleted" />
    <result column="isSameAppraisal" jdbcType="TINYINT" property="isSameAppraisal" />
    <result column="lockId" jdbcType="VARCHAR" property="lockId" />
    <result column="templateId" jdbcType="BIGINT" property="templateId" />
    <result column="evaluateToBLowPrice" jdbcType="BIGINT" property="evaluateToBLowPrice" />
    <result column="evaluateToBHighPrice" jdbcType="BIGINT" property="evaluateToBHighPrice" />
    <result column="versionId" jdbcType="BIGINT" property="versionId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yan.shop.dao.AppraisalItem">
    <result column="extra" jdbcType="LONGVARCHAR" property="extra" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, itemId, categoryId, evaluateLowPrice, evaluateHighPrice, appraisalFee, exceptSalePrice, 
    userId, isAddMaterial, reason, remark, itemType, itemName, scarcity, appraisalLevel, 
    staffReviewStatus, dispatchPriority, isHighQuality, `status`, payTime, appraisalTime, 
    `result`, updateTime, createTime, isDeleted, isSameAppraisal, lockId, templateId, 
    evaluateToBLowPrice, evaluateToBHighPrice, versionId
  </sql>
  <sql id="Blob_Column_List">
    extra
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from appraisal_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from appraisal_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
</mapper>